// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.1
// source: proto/v1/identity/workspace_group/workspace_group.proto

package workspace_group

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateWorkspaceGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Tags *structpb.Struct `protobuf:"bytes,2,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *CreateWorkspaceGroupRequest) Reset() {
	*x = CreateWorkspaceGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorkspaceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorkspaceGroupRequest) ProtoMessage() {}

func (x *CreateWorkspaceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorkspaceGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateWorkspaceGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWorkspaceGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateWorkspaceGroupRequest) GetTags() *structpb.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdateWorkspaceGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceGroupId string `protobuf:"bytes,1,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	Tags *structpb.Struct `protobuf:"bytes,3,opt,name=tags,proto3" json:"tags,omitempty"`
}

func (x *UpdateWorkspaceGroupRequest) Reset() {
	*x = UpdateWorkspaceGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWorkspaceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWorkspaceGroupRequest) ProtoMessage() {}

func (x *UpdateWorkspaceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWorkspaceGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateWorkspaceGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateWorkspaceGroupRequest) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

func (x *UpdateWorkspaceGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateWorkspaceGroupRequest) GetTags() *structpb.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UserWorkspaceGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId string `protobuf:"bytes,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	// +optional
	RoleType string `protobuf:"bytes,3,opt,name=role_type,json=roleType,proto3" json:"role_type,omitempty"`
	// +optional
	UserName string `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	// +optional
	State string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *UserWorkspaceGroup) Reset() {
	*x = UserWorkspaceGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserWorkspaceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserWorkspaceGroup) ProtoMessage() {}

func (x *UserWorkspaceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserWorkspaceGroup.ProtoReflect.Descriptor instead.
func (*UserWorkspaceGroup) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{2}
}

func (x *UserWorkspaceGroup) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserWorkspaceGroup) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *UserWorkspaceGroup) GetRoleType() string {
	if x != nil {
		return x.RoleType
	}
	return ""
}

func (x *UserWorkspaceGroup) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserWorkspaceGroup) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type UsersWorkspaceGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceGroupId string                `protobuf:"bytes,1,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
	Users            []*UserWorkspaceGroup `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UsersWorkspaceGroupRequest) Reset() {
	*x = UsersWorkspaceGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersWorkspaceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersWorkspaceGroupRequest) ProtoMessage() {}

func (x *UsersWorkspaceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersWorkspaceGroupRequest.ProtoReflect.Descriptor instead.
func (*UsersWorkspaceGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{3}
}

func (x *UsersWorkspaceGroupRequest) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

func (x *UsersWorkspaceGroupRequest) GetUsers() []*UserWorkspaceGroup {
	if x != nil {
		return x.Users
	}
	return nil
}

type WorkspaceGroupUpdateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceGroupId string `protobuf:"bytes,1,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
	UserId           string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId           string `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *WorkspaceGroupUpdateRoleRequest) Reset() {
	*x = WorkspaceGroupUpdateRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceGroupUpdateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupUpdateRoleRequest) ProtoMessage() {}

func (x *WorkspaceGroupUpdateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupUpdateRoleRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupUpdateRoleRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{4}
}

func (x *WorkspaceGroupUpdateRoleRequest) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

func (x *WorkspaceGroupUpdateRoleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WorkspaceGroupUpdateRoleRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type WorkspaceGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceGroupId string `protobuf:"bytes,1,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
}

func (x *WorkspaceGroupRequest) Reset() {
	*x = WorkspaceGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupRequest) ProtoMessage() {}

func (x *WorkspaceGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupRequest.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{5}
}

func (x *WorkspaceGroupRequest) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

type WorkspaceGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceGroupId string                `protobuf:"bytes,1,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
	Name             string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	WorkspaceCount   int32                 `protobuf:"varint,3,opt,name=workspace_count,json=workspaceCount,proto3" json:"workspace_count,omitempty"`
	Users            []*UserWorkspaceGroup `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
	Tags             *structpb.Struct      `protobuf:"bytes,5,opt,name=tags,proto3" json:"tags,omitempty"`
	CreatedBy        string                `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy        string                `protobuf:"bytes,7,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	DomainId         string                `protobuf:"bytes,21,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	CreatedAt        string                `protobuf:"bytes,31,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string                `protobuf:"bytes,32,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *WorkspaceGroupInfo) Reset() {
	*x = WorkspaceGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupInfo) ProtoMessage() {}

func (x *WorkspaceGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupInfo.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupInfo) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{6}
}

func (x *WorkspaceGroupInfo) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

func (x *WorkspaceGroupInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkspaceGroupInfo) GetWorkspaceCount() int32 {
	if x != nil {
		return x.WorkspaceCount
	}
	return 0
}

func (x *WorkspaceGroupInfo) GetUsers() []*UserWorkspaceGroup {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *WorkspaceGroupInfo) GetTags() *structpb.Struct {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *WorkspaceGroupInfo) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *WorkspaceGroupInfo) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *WorkspaceGroupInfo) GetDomainId() string {
	if x != nil {
		return x.DomainId
	}
	return ""
}

func (x *WorkspaceGroupInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WorkspaceGroupInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type WorkspaceGroupSearchQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// +optional
	Query *Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// +optional
	WorkspaceGroupId string `protobuf:"bytes,2,opt,name=workspace_group_id,json=workspaceGroupId,proto3" json:"workspace_group_id,omitempty"`
	// +optional
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// +optional
	CreatedBy string `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// +optional
	UpdatedBy string `protobuf:"bytes,5,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *WorkspaceGroupSearchQuery) Reset() {
	*x = WorkspaceGroupSearchQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceGroupSearchQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupSearchQuery) ProtoMessage() {}

func (x *WorkspaceGroupSearchQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupSearchQuery.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupSearchQuery) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{7}
}

func (x *WorkspaceGroupSearchQuery) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *WorkspaceGroupSearchQuery) GetWorkspaceGroupId() string {
	if x != nil {
		return x.WorkspaceGroupId
	}
	return ""
}

func (x *WorkspaceGroupSearchQuery) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkspaceGroupSearchQuery) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *WorkspaceGroupSearchQuery) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to KeyAlias:
	//
	//	*Filter_Key
	//	*Filter_K
	KeyAlias isFilter_KeyAlias `protobuf_oneof:"key_alias"`
	// Types that are assignable to ValueAlias:
	//
	//	*Filter_Value
	//	*Filter_V
	ValueAlias isFilter_ValueAlias `protobuf_oneof:"value_alias"`
	// Types that are assignable to OperatorAlias:
	//
	//	*Filter_Operator
	//	*Filter_O
	OperatorAlias isFilter_OperatorAlias `protobuf_oneof:"operator_alias"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{8}
}

func (m *Filter) GetKeyAlias() isFilter_KeyAlias {
	if m != nil {
		return m.KeyAlias
	}
	return nil
}

func (x *Filter) GetKey() string {
	if x, ok := x.GetKeyAlias().(*Filter_Key); ok {
		return x.Key
	}
	return ""
}

func (x *Filter) GetK() string {
	if x, ok := x.GetKeyAlias().(*Filter_K); ok {
		return x.K
	}
	return ""
}

func (m *Filter) GetValueAlias() isFilter_ValueAlias {
	if m != nil {
		return m.ValueAlias
	}
	return nil
}

func (x *Filter) GetValue() *structpb.Value {
	if x, ok := x.GetValueAlias().(*Filter_Value); ok {
		return x.Value
	}
	return nil
}

func (x *Filter) GetV() *structpb.Value {
	if x, ok := x.GetValueAlias().(*Filter_V); ok {
		return x.V
	}
	return nil
}

func (m *Filter) GetOperatorAlias() isFilter_OperatorAlias {
	if m != nil {
		return m.OperatorAlias
	}
	return nil
}

func (x *Filter) GetOperator() string {
	if x, ok := x.GetOperatorAlias().(*Filter_Operator); ok {
		return x.Operator
	}
	return ""
}

func (x *Filter) GetO() string {
	if x, ok := x.GetOperatorAlias().(*Filter_O); ok {
		return x.O
	}
	return ""
}

type isFilter_KeyAlias interface {
	isFilter_KeyAlias()
}

type Filter_Key struct {
	Key string `protobuf:"bytes,1,opt,name=key,proto3,oneof"`
}

type Filter_K struct {
	K string `protobuf:"bytes,2,opt,name=k,proto3,oneof"`
}

func (*Filter_Key) isFilter_KeyAlias() {}

func (*Filter_K) isFilter_KeyAlias() {}

type isFilter_ValueAlias interface {
	isFilter_ValueAlias()
}

type Filter_Value struct {
	Value *structpb.Value `protobuf:"bytes,3,opt,name=value,proto3,oneof"`
}

type Filter_V struct {
	V *structpb.Value `protobuf:"bytes,4,opt,name=v,proto3,oneof"`
}

func (*Filter_Value) isFilter_ValueAlias() {}

func (*Filter_V) isFilter_ValueAlias() {}

type isFilter_OperatorAlias interface {
	isFilter_OperatorAlias()
}

type Filter_Operator struct {
	Operator string `protobuf:"bytes,5,opt,name=operator,proto3,oneof"`
}

type Filter_O struct {
	O string `protobuf:"bytes,6,opt,name=o,proto3,oneof"`
}

func (*Filter_Operator) isFilter_OperatorAlias() {}

func (*Filter_O) isFilter_OperatorAlias() {}

type Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Desc bool   `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *Sort) Reset() {
	*x = Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sort) ProtoMessage() {}

func (x *Sort) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sort.ProtoReflect.Descriptor instead.
func (*Sort) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{9}
}

func (x *Sort) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Sort) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Page) Reset() {
	*x = Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{10}
}

func (x *Page) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Page) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Unwind struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string    `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Filter []*Filter `protobuf:"bytes,2,rep,name=filter,proto3" json:"filter,omitempty"`
}

func (x *Unwind) Reset() {
	*x = Unwind{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unwind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unwind) ProtoMessage() {}

func (x *Unwind) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unwind.ProtoReflect.Descriptor instead.
func (*Unwind) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{11}
}

func (x *Unwind) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Unwind) GetFilter() []*Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter    []*Filter `protobuf:"bytes,1,rep,name=filter,proto3" json:"filter,omitempty"`
	FilterOr  []*Filter `protobuf:"bytes,2,rep,name=filter_or,json=filterOr,proto3" json:"filter_or,omitempty"`
	Sort      []*Sort   `protobuf:"bytes,3,rep,name=sort,proto3" json:"sort,omitempty"`
	Page      *Page     `protobuf:"bytes,4,opt,name=page,proto3" json:"page,omitempty"`
	Minimal   bool      `protobuf:"varint,5,opt,name=minimal,proto3" json:"minimal,omitempty"`
	CountOnly bool      `protobuf:"varint,6,opt,name=count_only,json=countOnly,proto3" json:"count_only,omitempty"`
	Only      []string  `protobuf:"bytes,7,rep,name=only,proto3" json:"only,omitempty"`
	Keyword   string    `protobuf:"bytes,8,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Unwind    *Unwind   `protobuf:"bytes,9,opt,name=unwind,proto3" json:"unwind,omitempty"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{12}
}

func (x *Query) GetFilter() []*Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *Query) GetFilterOr() []*Filter {
	if x != nil {
		return x.FilterOr
	}
	return nil
}

func (x *Query) GetSort() []*Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *Query) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *Query) GetMinimal() bool {
	if x != nil {
		return x.Minimal
	}
	return false
}

func (x *Query) GetCountOnly() bool {
	if x != nil {
		return x.CountOnly
	}
	return false
}

func (x *Query) GetOnly() []string {
	if x != nil {
		return x.Only
	}
	return nil
}

func (x *Query) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *Query) GetUnwind() *Unwind {
	if x != nil {
		return x.Unwind
	}
	return nil
}

type WorkspaceGroupsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results    []*WorkspaceGroupInfo `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount int32                 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *WorkspaceGroupsInfo) Reset() {
	*x = WorkspaceGroupsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceGroupsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupsInfo) ProtoMessage() {}

func (x *WorkspaceGroupsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupsInfo.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupsInfo) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{13}
}

func (x *WorkspaceGroupsInfo) GetResults() []*WorkspaceGroupInfo {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *WorkspaceGroupsInfo) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type WorkspaceGroupStatQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query *Query `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *WorkspaceGroupStatQuery) Reset() {
	*x = WorkspaceGroupStatQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkspaceGroupStatQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkspaceGroupStatQuery) ProtoMessage() {}

func (x *WorkspaceGroupStatQuery) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkspaceGroupStatQuery.ProtoReflect.Descriptor instead.
func (*WorkspaceGroupStatQuery) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{14}
}

func (x *WorkspaceGroupStatQuery) GetQuery() *Query {
	if x != nil {
		return x.Query
	}
	return nil
}

type APIResourcesList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*APIResource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *APIResourcesList) Reset() {
	*x = APIResourcesList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResourcesList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResourcesList) ProtoMessage() {}

func (x *APIResourcesList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResourcesList.ProtoReflect.Descriptor instead.
func (*APIResourcesList) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{15}
}

func (x *APIResourcesList) GetResources() []*APIResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type APIResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service    string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Resource   string   `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	ShortNames []string `protobuf:"bytes,3,rep,name=short_names,json=shortNames,proto3" json:"short_names,omitempty"`
	Verbs      []string `protobuf:"bytes,4,rep,name=verbs,proto3" json:"verbs,omitempty"`
}

func (x *APIResource) Reset() {
	*x = APIResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIResource) ProtoMessage() {}

func (x *APIResource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIResource.ProtoReflect.Descriptor instead.
func (*APIResource) Descriptor() ([]byte, []int) {
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP(), []int{16}
}

func (x *APIResource) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *APIResource) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *APIResource) GetShortNames() []string {
	if x != nil {
		return x.ShortNames
	}
	return nil
}

func (x *APIResource) GetVerbs() []string {
	if x != nil {
		return x.Verbs
	}
	return nil
}

var File_proto_v1_identity_workspace_group_workspace_group_proto protoreflect.FileDescriptor

var file_proto_v1_identity_workspace_group_workspace_group_proto_rawDesc = []byte{
	0x0a, 0x37, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x97, 0x01,
	0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x1f, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x15, 0x57,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0x92, 0x03, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4b, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x19, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xe0, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x01, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x01, 0x6b, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x01, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x01, 0x52, 0x01, 0x76, 0x12, 0x1c, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x01, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x01, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x6b, 0x65,
	0x79, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0x2c, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x32, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x5f, 0x0a, 0x06, 0x55, 0x6e,
	0x77, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x41, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xb6, 0x03, 0x0a, 0x05,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x5f, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x72,
	0x12, 0x3b, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x3b, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x6e,
	0x6c, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4f,
	0x6e, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6f, 0x6e, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x41, 0x0a, 0x06, 0x75, 0x6e, 0x77, 0x69, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x6e, 0x77, 0x69, 0x6e, 0x64, 0x52, 0x06, 0x75, 0x6e,
	0x77, 0x69, 0x6e, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x4f, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x59,
	0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x53, 0x74, 0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x60, 0x0a, 0x10, 0x41, 0x50, 0x49,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x0b, 0x41,
	0x50, 0x49, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x65, 0x72, 0x62, 0x73, 0x32, 0xb3, 0x0d, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0xaf, 0x01, 0x0a, 0x06, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0xaf, 0x01, 0x0a,
	0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x8a,
	0x01, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0xb4, 0x01, 0x0a, 0x09,
	0x61, 0x64, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x61, 0x64, 0x64, 0x2d, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x12, 0xba, 0x01, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x2e, 0x3a, 0x01, 0x2a, 0x22, 0x29, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12,
	0xbd, 0x01, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x42, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2d, 0x3a, 0x01, 0x2a, 0x22, 0x28, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0xa3, 0x01, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x12, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25,
	0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76,
	0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2f, 0x67, 0x65, 0x74, 0x12, 0xaa, 0x01, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x36, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22,
	0x21, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x89, 0x01, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x3a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x12, 0x9c,
	0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x50, 0x49, 0x47, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x33, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x32, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d,
	0x61, 0x70, 0x69, 0x2d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x42, 0x31, 0x5a,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x6a, 0x69, 0x6e,
	0x6a, 0x6f, 0x2f, 0x77, 0x65, 0x62, 0x62, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x74,
	0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescOnce sync.Once
	file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescData = file_proto_v1_identity_workspace_group_workspace_group_proto_rawDesc
)

func file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescGZIP() []byte {
	file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescOnce.Do(func() {
		file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescData)
	})
	return file_proto_v1_identity_workspace_group_workspace_group_proto_rawDescData
}

var file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_v1_identity_workspace_group_workspace_group_proto_goTypes = []interface{}{
	(*CreateWorkspaceGroupRequest)(nil),     // 0: proto.v1.identity.workspace_group.CreateWorkspaceGroupRequest
	(*UpdateWorkspaceGroupRequest)(nil),     // 1: proto.v1.identity.workspace_group.UpdateWorkspaceGroupRequest
	(*UserWorkspaceGroup)(nil),              // 2: proto.v1.identity.workspace_group.UserWorkspaceGroup
	(*UsersWorkspaceGroupRequest)(nil),      // 3: proto.v1.identity.workspace_group.UsersWorkspaceGroupRequest
	(*WorkspaceGroupUpdateRoleRequest)(nil), // 4: proto.v1.identity.workspace_group.WorkspaceGroupUpdateRoleRequest
	(*WorkspaceGroupRequest)(nil),           // 5: proto.v1.identity.workspace_group.WorkspaceGroupRequest
	(*WorkspaceGroupInfo)(nil),              // 6: proto.v1.identity.workspace_group.WorkspaceGroupInfo
	(*WorkspaceGroupSearchQuery)(nil),       // 7: proto.v1.identity.workspace_group.WorkspaceGroupSearchQuery
	(*Filter)(nil),                          // 8: proto.v1.identity.workspace_group.Filter
	(*Sort)(nil),                            // 9: proto.v1.identity.workspace_group.Sort
	(*Page)(nil),                            // 10: proto.v1.identity.workspace_group.Page
	(*Unwind)(nil),                          // 11: proto.v1.identity.workspace_group.Unwind
	(*Query)(nil),                           // 12: proto.v1.identity.workspace_group.Query
	(*WorkspaceGroupsInfo)(nil),             // 13: proto.v1.identity.workspace_group.WorkspaceGroupsInfo
	(*WorkspaceGroupStatQuery)(nil),         // 14: proto.v1.identity.workspace_group.WorkspaceGroupStatQuery
	(*APIResourcesList)(nil),                // 15: proto.v1.identity.workspace_group.APIResourcesList
	(*APIResource)(nil),                     // 16: proto.v1.identity.workspace_group.APIResource
	(*structpb.Struct)(nil),                 // 17: google.protobuf.Struct
	(*structpb.Value)(nil),                  // 18: google.protobuf.Value
	(*emptypb.Empty)(nil),                   // 19: google.protobuf.Empty
}
var file_proto_v1_identity_workspace_group_workspace_group_proto_depIdxs = []int32{
	17, // 0: proto.v1.identity.workspace_group.CreateWorkspaceGroupRequest.tags:type_name -> google.protobuf.Struct
	17, // 1: proto.v1.identity.workspace_group.UpdateWorkspaceGroupRequest.tags:type_name -> google.protobuf.Struct
	2,  // 2: proto.v1.identity.workspace_group.UsersWorkspaceGroupRequest.users:type_name -> proto.v1.identity.workspace_group.UserWorkspaceGroup
	2,  // 3: proto.v1.identity.workspace_group.WorkspaceGroupInfo.users:type_name -> proto.v1.identity.workspace_group.UserWorkspaceGroup
	17, // 4: proto.v1.identity.workspace_group.WorkspaceGroupInfo.tags:type_name -> google.protobuf.Struct
	12, // 5: proto.v1.identity.workspace_group.WorkspaceGroupSearchQuery.query:type_name -> proto.v1.identity.workspace_group.Query
	18, // 6: proto.v1.identity.workspace_group.Filter.value:type_name -> google.protobuf.Value
	18, // 7: proto.v1.identity.workspace_group.Filter.v:type_name -> google.protobuf.Value
	8,  // 8: proto.v1.identity.workspace_group.Unwind.filter:type_name -> proto.v1.identity.workspace_group.Filter
	8,  // 9: proto.v1.identity.workspace_group.Query.filter:type_name -> proto.v1.identity.workspace_group.Filter
	8,  // 10: proto.v1.identity.workspace_group.Query.filter_or:type_name -> proto.v1.identity.workspace_group.Filter
	9,  // 11: proto.v1.identity.workspace_group.Query.sort:type_name -> proto.v1.identity.workspace_group.Sort
	10, // 12: proto.v1.identity.workspace_group.Query.page:type_name -> proto.v1.identity.workspace_group.Page
	11, // 13: proto.v1.identity.workspace_group.Query.unwind:type_name -> proto.v1.identity.workspace_group.Unwind
	6,  // 14: proto.v1.identity.workspace_group.WorkspaceGroupsInfo.results:type_name -> proto.v1.identity.workspace_group.WorkspaceGroupInfo
	12, // 15: proto.v1.identity.workspace_group.WorkspaceGroupStatQuery.query:type_name -> proto.v1.identity.workspace_group.Query
	16, // 16: proto.v1.identity.workspace_group.APIResourcesList.resources:type_name -> proto.v1.identity.workspace_group.APIResource
	0,  // 17: proto.v1.identity.workspace_group.WorkspaceGroup.create:input_type -> proto.v1.identity.workspace_group.CreateWorkspaceGroupRequest
	1,  // 18: proto.v1.identity.workspace_group.WorkspaceGroup.update:input_type -> proto.v1.identity.workspace_group.UpdateWorkspaceGroupRequest
	5,  // 19: proto.v1.identity.workspace_group.WorkspaceGroup.delete:input_type -> proto.v1.identity.workspace_group.WorkspaceGroupRequest
	3,  // 20: proto.v1.identity.workspace_group.WorkspaceGroup.add_users:input_type -> proto.v1.identity.workspace_group.UsersWorkspaceGroupRequest
	3,  // 21: proto.v1.identity.workspace_group.WorkspaceGroup.remove_users:input_type -> proto.v1.identity.workspace_group.UsersWorkspaceGroupRequest
	4,  // 22: proto.v1.identity.workspace_group.WorkspaceGroup.update_role:input_type -> proto.v1.identity.workspace_group.WorkspaceGroupUpdateRoleRequest
	5,  // 23: proto.v1.identity.workspace_group.WorkspaceGroup.get:input_type -> proto.v1.identity.workspace_group.WorkspaceGroupRequest
	7,  // 24: proto.v1.identity.workspace_group.WorkspaceGroup.list:input_type -> proto.v1.identity.workspace_group.WorkspaceGroupSearchQuery
	14, // 25: proto.v1.identity.workspace_group.WorkspaceGroup.stat:input_type -> proto.v1.identity.workspace_group.WorkspaceGroupStatQuery
	19, // 26: proto.v1.identity.workspace_group.WorkspaceGroup.ListAPIGResources:input_type -> google.protobuf.Empty
	6,  // 27: proto.v1.identity.workspace_group.WorkspaceGroup.create:output_type -> proto.v1.identity.workspace_group.WorkspaceGroupInfo
	6,  // 28: proto.v1.identity.workspace_group.WorkspaceGroup.update:output_type -> proto.v1.identity.workspace_group.WorkspaceGroupInfo
	19, // 29: proto.v1.identity.workspace_group.WorkspaceGroup.delete:output_type -> google.protobuf.Empty
	6,  // 30: proto.v1.identity.workspace_group.WorkspaceGroup.add_users:output_type -> proto.v1.identity.workspace_group.WorkspaceGroupInfo
	6,  // 31: proto.v1.identity.workspace_group.WorkspaceGroup.remove_users:output_type -> proto.v1.identity.workspace_group.WorkspaceGroupInfo
	6,  // 32: proto.v1.identity.workspace_group.WorkspaceGroup.update_role:output_type -> proto.v1.identity.workspace_group.WorkspaceGroupInfo
	6,  // 33: proto.v1.identity.workspace_group.WorkspaceGroup.get:output_type -> proto.v1.identity.workspace_group.WorkspaceGroupInfo
	13, // 34: proto.v1.identity.workspace_group.WorkspaceGroup.list:output_type -> proto.v1.identity.workspace_group.WorkspaceGroupsInfo
	17, // 35: proto.v1.identity.workspace_group.WorkspaceGroup.stat:output_type -> google.protobuf.Struct
	15, // 36: proto.v1.identity.workspace_group.WorkspaceGroup.ListAPIGResources:output_type -> proto.v1.identity.workspace_group.APIResourcesList
	27, // [27:37] is the sub-list for method output_type
	17, // [17:27] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_proto_v1_identity_workspace_group_workspace_group_proto_init() }
func file_proto_v1_identity_workspace_group_workspace_group_proto_init() {
	if File_proto_v1_identity_workspace_group_workspace_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorkspaceGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWorkspaceGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserWorkspaceGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersWorkspaceGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceGroupUpdateRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceGroupSearchQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unwind); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceGroupsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkspaceGroupStatQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResourcesList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Filter_Key)(nil),
		(*Filter_K)(nil),
		(*Filter_Value)(nil),
		(*Filter_V)(nil),
		(*Filter_Operator)(nil),
		(*Filter_O)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_identity_workspace_group_workspace_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_identity_workspace_group_workspace_group_proto_goTypes,
		DependencyIndexes: file_proto_v1_identity_workspace_group_workspace_group_proto_depIdxs,
		MessageInfos:      file_proto_v1_identity_workspace_group_workspace_group_proto_msgTypes,
	}.Build()
	File_proto_v1_identity_workspace_group_workspace_group_proto = out.File
	file_proto_v1_identity_workspace_group_workspace_group_proto_rawDesc = nil
	file_proto_v1_identity_workspace_group_workspace_group_proto_goTypes = nil
	file_proto_v1_identity_workspace_group_workspace_group_proto_depIdxs = nil
}
