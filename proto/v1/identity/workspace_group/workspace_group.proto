syntax = "proto3";

package proto.v1.identity.workspace_group;

option go_package = "github.com/yjinjo/webb-api/dist/workspace_group";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/api/annotations.proto";

service WorkspaceGroup {
  rpc create (CreateWorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/create"
      body: "*"
    };
  }

  rpc update (UpdateWorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/update"
      body: "*"
    };
  }

  rpc delete (WorkspaceGroupRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/delete"
      body: "*"
    };
  }

  rpc add_users (UsersWorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/add-users"
      body: "*"
    };
  }

  rpc remove_users (UsersWorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/remove-users"
      body: "*"
    };
  }

  rpc update_role (WorkspaceGroupUpdateRoleRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/update-role"
      body: "*"
    };
  }

  rpc get (WorkspaceGroupRequest) returns (WorkspaceGroupInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/get"
      body: "*"
    };
  }

  rpc list (WorkspaceGroupSearchQuery) returns (WorkspaceGroupsInfo) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/list"
      body: "*"
    };
  }

  rpc stat (WorkspaceGroupStatQuery) returns (google.protobuf.Struct) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/stat"
      body: "*"
    };
  }

  // API 리소스 목록을 반환하는 메서드 추가
  rpc ListAPIGResources (google.protobuf.Empty) returns (APIResourcesList) {
    option (google.api.http) = {
      post: "/identity/v2/workspace-group/list-api-resources"
      body: "*"
    };
  }
}

message CreateWorkspaceGroupRequest {
  string name = 1;
  // +optional
  google.protobuf.Struct tags = 2;
}

message UpdateWorkspaceGroupRequest {
  string workspace_group_id = 1;
  // +optional
  string name = 2;
  // +optional
  google.protobuf.Struct tags = 3;
}

message UserWorkspaceGroup {
  string user_id = 1;
  string role_id = 2;
  // +optional
  string role_type = 3;
  // +optional
  string user_name = 4;
  // +optional
  string state = 5;
}

message UsersWorkspaceGroupRequest {
  string workspace_group_id = 1;
  repeated UserWorkspaceGroup users = 2;
}

message WorkspaceGroupUpdateRoleRequest {
  string workspace_group_id = 1;
  string user_id = 2;
  string role_id = 3;
}

message WorkspaceGroupRequest {
  string workspace_group_id = 1;
}

message WorkspaceGroupInfo {
  string workspace_group_id = 1;
  string name = 2;
  int32 workspace_count = 3;
  repeated UserWorkspaceGroup users = 4;
  google.protobuf.Struct tags = 5;
  string created_by = 6;
  string updated_by = 7;
  string domain_id = 21;
  string created_at = 31;
  string updated_at = 32;
}

message WorkspaceGroupSearchQuery {
  // +optional
  Query query = 1;
  // +optional
  string workspace_group_id = 2;
  // +optional
  string name = 3;
  // +optional
  string created_by = 4;
  // +optional
  string updated_by = 5;
}

message Filter {
  oneof key_alias {
    string key = 1;
    string k = 2;
  }

  oneof value_alias {
    google.protobuf.Value value = 3;
    google.protobuf.Value v = 4;
  }

  oneof operator_alias {
    string operator = 5;
    string o = 6;
  }
}

message Sort {
  string key = 1;
  bool desc = 2;
}

message Page {
  uint32 start = 1;
  uint32 limit = 2;
}

message Unwind {
  string path = 1;
  repeated Filter filter = 2;
}

message Query {
  repeated Filter filter = 1;
  repeated Filter filter_or = 2;
  repeated Sort sort = 3;
  Page page = 4;
  bool minimal = 5;
  bool count_only = 6;
  repeated string only = 7;
  string keyword = 8;
  Unwind unwind = 9;
}

message WorkspaceGroupsInfo {
  repeated WorkspaceGroupInfo results = 1;
  int32 total_count = 2;
}

message WorkspaceGroupStatQuery {
  Query query = 1;
}

message APIResourcesList {
  repeated APIResource resources = 1;
}

message APIResource {
  string service = 1;
  string resource = 2;
  repeated string short_names = 3;
  repeated string verbs = 4;
}
